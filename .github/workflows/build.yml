name: Build Linux Kernel Debian Package

on:
  workflow_dispatch:  # 手动触发工作流
  push:
    branches: [ main ]  # 在推送到 main 分支时自动运行

jobs:
  build-kernel:
    runs-on: ubuntu-latest
    
    steps:
      - name: Free up disk space
        run: |
          # 删除不必要的大型文件和目录
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          # 删除 Android SDK
          sudo rm -rf /usr/local/lib/android
          # 清理 apt 缓存
          sudo apt-get clean
          # 查看空间状况
          df -h

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential flex bison libssl-dev libelf-dev bc lz4 rsync curl wget git fakeroot debhelper

      - name: Download kernel config file
        run: |
          mkdir -p kernel-build
          cd kernel-build
          wget -O .config https://raw.githubusercontent.com/huifujing/amd-kernel-6.14.0/main/config-6.1.0-32-amd64
          if [ $? -ne 0 ]; then
            echo "Failed to download config file"
            exit 1
          fi

      - name: Clone Linux kernel repository
        run: |
          git clone --depth=1 https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git linux-6.14
          if [ $? -ne 0 ]; then
            echo "Failed to clone kernel repository"
            exit 1
          fi

      - name: Prepare build environment
        run: |
          cp kernel-build/.config linux-6.14/
          cd linux-6.14
          # 禁用调试信息以减少构建大小
          sed -i 's/CONFIG_DEBUG_INFO=y/CONFIG_DEBUG_INFO=n/' .config
          sed -i 's/CONFIG_DEBUG_INFO_DWARF4=y/CONFIG_DEBUG_INFO_DWARF4=n/' .config
          sed -i 's/CONFIG_DEBUG_INFO_BTF=y/CONFIG_DEBUG_INFO_BTF=n/' .config
          # 禁用一些不必要的模块
          echo "CONFIG_DEBUG_INFO_REDUCED=y" >> .config
          make olddefconfig

      - name: Build kernel packages without debug package
        run: |
          cd linux-6.14
          # 使用skipdbg参数避免生成调试包
          make -j$(nproc) bindeb-pkg LOCALVERSION= KDEB_PKGVERSION=$(date +%Y%m%d)-1 skipdbg=true
          
      - name: Upload Debian packages
        uses: actions/upload-artifact@v3
        with:
          name: kernel-debs
          path: |
            linux-*.deb
